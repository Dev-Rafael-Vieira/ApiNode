npm init -y
//cria um arquivo chamado package.json

npm install express
// intala o express biblioteca responsavel por gerenciar as rotas e as views

node server.js
// sobe o servidor na maquina

npm install -D nodemon
// instala o nodemon biblioteca responsavel por gerenciar o hot reload o "-D" significa que ser� instalada somente em desenvolvimento

*no arquivo package.json dentro dos scripts adiciona-se a linha :
"dev": "nodemon server.js"
// onde "dev" é o nome que escolhemos para o comando criado e "nodemon server.js" refere-se ao comando que será implementado
// para chamar o comando no terminal é dado o comando: "npm run dev" sem aspas e apartir de agora o node será restartado toda vez que for taualizado o código

sudo docker pull mongo
// comando no ubuntu para baixar a imagem do mongo na pull para subir o banco de dados 

sudo docker run --name mongo -p 27017:27017 -d mongo
// comando sobe a imagem para rodar no container e seta a port da maquina local 27017 para acessar a porta do container tambem com 27017 -d designa a imagem que irá rodar

sudo docker ps
// lista os containeres

Download do Robomongo Robo3t
//assistente de interface grafica que permite aconpanhar o banco de dados e visualizar os inserts

docker start nomedaimagem
//sobe o container novamente de pois de ter fechado o terminal 

npm install mongoose
// instala uma dependencia de 'orm' de bancos não relacionais oub seja ele incapsula a logica das operações do banco de dados atraves do codigo 

npm install require-dir
// biblioteca responsavel por fazer a requisição de arquivos dentro da pasta model 

npm install mongoose-paginate
//biblioteca responsável por trazer as requisições já paginadas do banco de dados

          
          
            
            ***configuração final das requisições do insomnia***

1: index, metodo GET - http://localhost:3001/api/products?page=2

2: show, metodo GET - http://localhost:3001/api/products/5d68e58de9432120e2350cc3 - o ultimo parametro é o id 

3: create, metodo POST - http://localhost:3001/api/products
corpo da requisição:
{
	"title": "ReactJS99",
	"description":"Biblioteca de  javascript para aplicações interativas ",
	"url": "http://github.com/facebook/react-native"
}

4: update, metodo PUT - http://localhost:3001/api/products/5d68e58de9432120e2350cc3 - o ultimo parametro é o id 

5: delete, metodo DELETE - http://localhost:3001/api/products/5d68e58de9432120e2350cc3 - o ultimo parametro é o id 
